class Solution {
  public:
  
   int height(Node *root)
 {
     if(root==NULL)
     return 0;
     return 1+max(height(root->left),height(root->right));
 }
 int solve(Node *root,int tgt, int &t, int &cnt,bool &flag)
 {
     if(root==NULL)
     return 0;
     int lh=solve(root->left,tgt,t,cnt,flag);
     if(!flag)
     {
         cnt++;
         int h=height(root->right);
         t=max(t,cnt+h);
         return 1+max(lh,h);
     }
     int rh=solve(root->right,tgt,t,cnt,flag);
     if(!flag)
     {
         cnt++;
         t=max(t,cnt+lh);
         return 1+max(lh,rh);
     }
     if(root->data==tgt)
     {
         t=max(lh,rh);
         flag=false;
         return 1+t;
     }
     return 1+max(lh,rh);
 }
   int minTime(Node* root, int target) 
   {
      int cnt=0;
      int t=0;
      bool flag=true;
      solve(root,target,t,cnt,flag);
      return t;
   }
};
